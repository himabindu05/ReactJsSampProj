{"ast":null,"code":"var _jsxFileName = \"F:\\\\Learnings\\\\ReactJS\\\\MyFirstReact\\\\src\\\\Components\\\\Message.js\";\nimport React, { Component } from 'react';\n\nclass Message extends Component {\n  constructor() {\n    super();\n    this.state = {\n      message: 'Welcome Visitor',\n      count: 0\n    };\n  } //  changeMessage(){\n  //      this.setState({\n  //          message:'Thank You for subscribing',\n  //          count:this.state.count+1\n  //      },()=> {console.log(\"Counter afterr callback\" + this.state.count)})\n  //      console.log(\"counterValue : \" + this.state.count)\n  //  }\n  //changeMessage when called continously, \n  //the setstate gets clubbed and updates due to which the output would be wrongly overidden\n  // changeMessage(){\n  //     this.setState({\n  //         message:'Thank You for subscribing',\n  //         count:this.state.count+1\n  //     },()=>this.logConsole())\n  //     console.log(\"counterValue : \" + this.state.count)\n  // }\n\n\n  logConsole() {\n    console.log(\"Counter after callback\" + this.state.count.toString);\n  } //Change Message using the previous state\n\n\n  changeMessage() {\n    this.setState(prevState => ({\n      count: prevState + 1,\n      message: 'Thank You for subscribing'\n    }), () => this.logConsole());\n    console.log(\"counterValue : \" + this.state.count);\n  }\n\n  changeMessageFive() {\n    this.changeMessage();\n    this.changeMessage();\n    this.changeMessage();\n    this.changeMessage();\n    this.changeMessage();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.state.message), React.createElement(\"button\", {\n      onClick: () => this.changeMessageFive(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Subscribe\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Subscribers Count : \", this.state.count));\n  }\n\n}\n\nexport default Message;","map":{"version":3,"sources":["F:/Learnings/ReactJS/MyFirstReact/src/Components/Message.js"],"names":["React","Component","Message","constructor","state","message","count","logConsole","console","log","toString","changeMessage","setState","prevState","changeMessageFive","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEC,MAAMC,OAAN,SAAsBD,SAAtB,CAA+B;AAC3BE,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAC,iBADC;AAETC,MAAAA,KAAK,EAAC;AAFG,KAAb;AAIH,GAP0B,CAQ5B;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACCC,EAAAA,UAAU,GAAE;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2B,KAAKL,KAAL,CAAWE,KAAX,CAAiBI,QAAxD;AACH,GA7B0B,CA+B5B;;;AAEAC,EAAAA,aAAa,GAAE;AACX,SAAKC,QAAL,CAAcC,SAAS,KAAG;AAACP,MAAAA,KAAK,EAACO,SAAS,GAAC,CAAjB;AAAmBR,MAAAA,OAAO,EAAC;AAA3B,KAAH,CAAvB,EAAoF,MAAI,KAAKE,UAAL,EAAxF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoB,KAAKL,KAAL,CAAWE,KAA3C;AACH;;AAEDQ,EAAAA,iBAAiB,GAAE;AACf,SAAKH,aAAL;AACA,SAAKA,aAAL;AACA,SAAKA,aAAL;AACA,SAAKA,aAAL;AACA,SAAKA,aAAL;AACH;;AACDI,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKX,KAAL,CAAWC,OAAhB,CADJ,EAEI;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKS,iBAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAGJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAyB,KAAKV,KAAL,CAAWE,KAApC,CAHI,CADJ;AAOH;;AArD2B;;AAwDhC,eAAeJ,OAAf","sourcesContent":["import React, {Component} from 'react';\r\n\r\n class Message extends Component{\r\n     constructor(){\r\n         super();\r\n         this.state = {\r\n             message:'Welcome Visitor',\r\n             count:0\r\n         }\r\n     }\r\n    //  changeMessage(){\r\n    //      this.setState({\r\n    //          message:'Thank You for subscribing',\r\n    //          count:this.state.count+1\r\n    //      },()=> {console.log(\"Counter afterr callback\" + this.state.count)})\r\n    //      console.log(\"counterValue : \" + this.state.count)\r\n    //  }\r\n\r\n\r\n    //changeMessage when called continously, \r\n    //the setstate gets clubbed and updates due to which the output would be wrongly overidden\r\n\r\n    // changeMessage(){\r\n    //     this.setState({\r\n    //         message:'Thank You for subscribing',\r\n    //         count:this.state.count+1\r\n    //     },()=>this.logConsole())\r\n    //     console.log(\"counterValue : \" + this.state.count)\r\n    // }\r\n     logConsole(){\r\n         console.log(\"Counter after callback\" + this.state.count.toString)\r\n     }\r\n\r\n    //Change Message using the previous state\r\n\r\n    changeMessage(){\r\n        this.setState(prevState=>({count:prevState+1,message:'Thank You for subscribing',}),()=>this.logConsole())\r\n        console.log(\"counterValue : \" + this.state.count)\r\n    }\r\n\r\n    changeMessageFive(){\r\n        this.changeMessage()\r\n        this.changeMessage()\r\n        this.changeMessage()\r\n        this.changeMessage()\r\n        this.changeMessage()\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>{this.state.message}</h1>\r\n                <button onClick={() => this.changeMessageFive()}>Subscribe</button>\r\n        <h2>Subscribers Count : {this.state.count}</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message;"]},"metadata":{},"sourceType":"module"}